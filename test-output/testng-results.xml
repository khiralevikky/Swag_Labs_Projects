<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="59" passed="50" failed="9" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-10T22:56:33 IST" name="Swag Labs Automation" finished-at="2023-09-10T23:01:17 IST" duration-ms="284761">
    <groups>
    </groups>
    <test started-at="2023-09-10T22:56:33 IST" name="Regression" finished-at="2023-09-10T23:01:17 IST" duration-ms="284761">
      <class name="test.CheckoutOverviewTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:56:33 IST" name="configureReports" finished-at="2023-09-10T22:56:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:29 IST" name="openbBrowser" finished-at="2023-09-10T22:59:32 IST" duration-ms="3007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyDisplayOfProductOnCheckoutOverviewPage()[pri:1, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:32 IST" name="verifyDisplayOfProductOnCheckoutOverviewPage" finished-at="2023-09-10T22:59:34 IST" duration-ms="2054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDisplayOfProductOnCheckoutOverviewPage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:34 IST" name="captureResult" finished-at="2023-09-10T22:59:35 IST" duration-ms="207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDisplayOfProductOnCheckoutOverviewPage status=SUCCESS method=CheckoutOverviewTest.verifyDisplayOfProductOnCheckoutOverviewPage()[pri:1, instance:test.CheckoutOverviewTest@37ceb1df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:35 IST" name="openbBrowser" finished-at="2023-09-10T22:59:37 IST" duration-ms="2939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyProductPrice()[pri:2, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:37 IST" name="verifyProductPrice" finished-at="2023-09-10T22:59:39 IST" duration-ms="1998" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductPrice -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:39 IST" name="captureResult" finished-at="2023-09-10T22:59:40 IST" duration-ms="161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductPrice status=SUCCESS method=CheckoutOverviewTest.verifyProductPrice()[pri:2, instance:test.CheckoutOverviewTest@37ceb1df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:40 IST" name="openbBrowser" finished-at="2023-09-10T22:59:42 IST" duration-ms="2591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyItemTotalWithAdditionOfProductPrice()[pri:3, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:42 IST" name="verifyItemTotalWithAdditionOfProductPrice" finished-at="2023-09-10T22:59:44 IST" duration-ms="1759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyItemTotalWithAdditionOfProductPrice -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:44 IST" name="captureResult" finished-at="2023-09-10T22:59:44 IST" duration-ms="159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyItemTotalWithAdditionOfProductPrice status=SUCCESS method=CheckoutOverviewTest.verifyItemTotalWithAdditionOfProductPrice()[pri:3, instance:test.CheckoutOverviewTest@37ceb1df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:44 IST" name="openbBrowser" finished-at="2023-09-10T22:59:47 IST" duration-ms="2351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifySumOfItemTotalAndTaxWithTotalPrice()[pri:4, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:47 IST" name="verifySumOfItemTotalAndTaxWithTotalPrice" finished-at="2023-09-10T22:59:48 IST" duration-ms="1859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySumOfItemTotalAndTaxWithTotalPrice -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:48 IST" name="captureResult" finished-at="2023-09-10T22:59:49 IST" duration-ms="170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySumOfItemTotalAndTaxWithTotalPrice status=SUCCESS method=CheckoutOverviewTest.verifySumOfItemTotalAndTaxWithTotalPrice()[pri:4, instance:test.CheckoutOverviewTest@37ceb1df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:49 IST" name="openbBrowser" finished-at="2023-09-10T22:59:52 IST" duration-ms="3071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyFinishButton()[pri:5, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:52 IST" name="verifyFinishButton" finished-at="2023-09-10T22:59:54 IST" duration-ms="2017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFinishButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:54 IST" name="captureResult" finished-at="2023-09-10T22:59:54 IST" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFinishButton status=SUCCESS method=CheckoutOverviewTest.verifyFinishButton()[pri:5, instance:test.CheckoutOverviewTest@37ceb1df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:54 IST" name="openbBrowser" finished-at="2023-09-10T22:59:57 IST" duration-ms="3101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyCancelButton()[pri:6, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:57 IST" name="verifyCancelButton" finished-at="2023-09-10T22:59:59 IST" duration-ms="2110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T22:59:59 IST" name="captureResult" finished-at="2023-09-10T22:59:59 IST" duration-ms="133" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButton status=SUCCESS method=CheckoutOverviewTest.verifyCancelButton()[pri:6, instance:test.CheckoutOverviewTest@37ceb1df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.CheckoutOverviewTest@37ceb1df]" started-at="2023-09-10T23:01:17 IST" name="publish" finished-at="2023-09-10T23:01:17 IST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.CheckoutOverviewTest -->
      <class name="test.CheckoutPageTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:56:33 IST" name="configureReports" finished-at="2023-09-10T22:56:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:09 IST" name="openbBrowser" finished-at="2023-09-10T22:58:11 IST" duration-ms="2396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyFirstNameFieldByEnteringAlphaChar()[pri:1, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:11 IST" name="verifyFirstNameFieldByEnteringAlphaChar" finished-at="2023-09-10T22:58:13 IST" duration-ms="1558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFirstNameFieldByEnteringAlphaChar -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:13 IST" name="captureResult" finished-at="2023-09-10T22:58:13 IST" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFirstNameFieldByEnteringAlphaChar status=SUCCESS method=CheckoutPageTest.verifyFirstNameFieldByEnteringAlphaChar()[pri:1, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:13 IST" name="openbBrowser" finished-at="2023-09-10T22:58:16 IST" duration-ms="2986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyFirstNameFieldByEnteringNumber()[pri:2, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:16 IST" name="verifyFirstNameFieldByEnteringNumber" finished-at="2023-09-10T22:58:17 IST" duration-ms="1436" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Error: First Name is required only character] but found [Error: Last Name is required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Error: First Name is required only character] but found [Error: Last Name is required]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at test.CheckoutPageTest.verifyFirstNameFieldByEnteringNumber(CheckoutPageTest.java:70)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFirstNameFieldByEnteringNumber -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:18 IST" name="captureResult" finished-at="2023-09-10T22:58:18 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFirstNameFieldByEnteringNumber status=FAILURE method=CheckoutPageTest.verifyFirstNameFieldByEnteringNumber()[pri:2, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:18 IST" name="openbBrowser" finished-at="2023-09-10T22:58:20 IST" duration-ms="2487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyFirstNameFieldByEnteringSpecialCharacters()[pri:3, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:20 IST" name="verifyFirstNameFieldByEnteringSpecialCharacters" finished-at="2023-09-10T22:58:22 IST" duration-ms="1378" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Error: First Name is required only character] but found [Error: Last Name is required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Error: First Name is required only character] but found [Error: Last Name is required]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at test.CheckoutPageTest.verifyFirstNameFieldByEnteringSpecialCharacters(CheckoutPageTest.java:89)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFirstNameFieldByEnteringSpecialCharacters -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:22 IST" name="captureResult" finished-at="2023-09-10T22:58:22 IST" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFirstNameFieldByEnteringSpecialCharacters status=FAILURE method=CheckoutPageTest.verifyFirstNameFieldByEnteringSpecialCharacters()[pri:3, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:22 IST" name="openbBrowser" finished-at="2023-09-10T22:58:24 IST" duration-ms="2370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyFirstNameFieldByEnteringAlphaCharactersAndNumbers()[pri:4, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:24 IST" name="verifyFirstNameFieldByEnteringAlphaCharactersAndNumbers" finished-at="2023-09-10T22:58:26 IST" duration-ms="1237" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Error: First Name is required only character] but found [Error: Last Name is required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Error: First Name is required only character] but found [Error: Last Name is required]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at test.CheckoutPageTest.verifyFirstNameFieldByEnteringAlphaCharactersAndNumbers(CheckoutPageTest.java:108)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFirstNameFieldByEnteringAlphaCharactersAndNumbers -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:26 IST" name="captureResult" finished-at="2023-09-10T22:58:26 IST" duration-ms="157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFirstNameFieldByEnteringAlphaCharactersAndNumbers status=FAILURE method=CheckoutPageTest.verifyFirstNameFieldByEnteringAlphaCharactersAndNumbers()[pri:4, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:26 IST" name="openbBrowser" finished-at="2023-09-10T22:58:28 IST" duration-ms="2444" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyLastNameFieldByEnteringAlphaChar()[pri:5, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:28 IST" name="verifyLastNameFieldByEnteringAlphaChar" finished-at="2023-09-10T22:58:30 IST" duration-ms="1646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastNameFieldByEnteringAlphaChar -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:30 IST" name="captureResult" finished-at="2023-09-10T22:58:30 IST" duration-ms="159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLastNameFieldByEnteringAlphaChar status=SUCCESS method=CheckoutPageTest.verifyLastNameFieldByEnteringAlphaChar()[pri:5, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:30 IST" name="openbBrowser" finished-at="2023-09-10T22:58:33 IST" duration-ms="2856" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyLastNameFieldByEnteringNumber()[pri:6, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:33 IST" name="verifyLastNameFieldByEnteringNumber" finished-at="2023-09-10T22:58:35 IST" duration-ms="1752" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Error: Last Name is required only character] but found [Error: Postal Code is required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Error: Last Name is required only character] but found [Error: Postal Code is required]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at test.CheckoutPageTest.verifyLastNameFieldByEnteringNumber(CheckoutPageTest.java:150)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastNameFieldByEnteringNumber -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:35 IST" name="captureResult" finished-at="2023-09-10T22:58:35 IST" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLastNameFieldByEnteringNumber status=FAILURE method=CheckoutPageTest.verifyLastNameFieldByEnteringNumber()[pri:6, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:35 IST" name="openbBrowser" finished-at="2023-09-10T22:58:38 IST" duration-ms="3086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyLastNameFieldByEnteringSpecialCharacters()[pri:7, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:38 IST" name="verifyLastNameFieldByEnteringSpecialCharacters" finished-at="2023-09-10T22:58:40 IST" duration-ms="1451" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Error: Last Name is required only character] but found [Error: Postal Code is required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Error: Last Name is required only character] but found [Error: Postal Code is required]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at test.CheckoutPageTest.verifyLastNameFieldByEnteringSpecialCharacters(CheckoutPageTest.java:171)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastNameFieldByEnteringSpecialCharacters -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:40 IST" name="captureResult" finished-at="2023-09-10T22:58:40 IST" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLastNameFieldByEnteringSpecialCharacters status=FAILURE method=CheckoutPageTest.verifyLastNameFieldByEnteringSpecialCharacters()[pri:7, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:40 IST" name="openbBrowser" finished-at="2023-09-10T22:58:43 IST" duration-ms="2632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyLastNameFieldByEnteringAlphaCharactersAndNumbers()[pri:8, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:43 IST" name="verifyLastNameFieldByEnteringAlphaCharactersAndNumbers" finished-at="2023-09-10T22:58:45 IST" duration-ms="1983" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Error: Last Name is required only character] but found [Error: Postal Code is required]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Error: Last Name is required only character] but found [Error: Postal Code is required]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at test.CheckoutPageTest.verifyLastNameFieldByEnteringAlphaCharactersAndNumbers(CheckoutPageTest.java:192)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLastNameFieldByEnteringAlphaCharactersAndNumbers -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:45 IST" name="captureResult" finished-at="2023-09-10T22:58:45 IST" duration-ms="146" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLastNameFieldByEnteringAlphaCharactersAndNumbers status=FAILURE method=CheckoutPageTest.verifyLastNameFieldByEnteringAlphaCharactersAndNumbers()[pri:8, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:45 IST" name="openbBrowser" finished-at="2023-09-10T22:58:48 IST" duration-ms="2848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyZipCodeFieldByEnteringValidNumber()[pri:9, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:48 IST" name="verifyZipCodeFieldByEnteringValidNumber" finished-at="2023-09-10T22:58:50 IST" duration-ms="1877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyZipCodeFieldByEnteringValidNumber -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:50 IST" name="captureResult" finished-at="2023-09-10T22:58:50 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyZipCodeFieldByEnteringValidNumber status=SUCCESS method=CheckoutPageTest.verifyZipCodeFieldByEnteringValidNumber()[pri:9, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:50 IST" name="openbBrowser" finished-at="2023-09-10T22:58:53 IST" duration-ms="2991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyZipCodeFieldByEnteringInvalidNumber()[pri:10, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:58:53 IST" name="verifyZipCodeFieldByEnteringInvalidNumber" finished-at="2023-09-10T22:59:00 IST" duration-ms="6665" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.180)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3c975483c367ced4dfcfd230c87333a0, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.180, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\AMOL\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55980}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55980/devtoo..., se:cdpVersion: 116.0.5845.180, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3c975483c367ced4dfcfd230c87333a0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.180)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3c975483c367ced4dfcfd230c87333a0, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.180, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\AMOL\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55980}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55980/devtoo..., se:cdpVersion: 116.0.5845.180, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3c975483c367ced4dfcfd230c87333a0
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy20.getText(Unknown Source)
at pom.CheckoutPage.displayingErrorMessage(CheckoutPage.java:37)
at test.CheckoutPageTest.verifyZipCodeFieldByEnteringInvalidNumber(CheckoutPageTest.java:233)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyZipCodeFieldByEnteringInvalidNumber -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:00 IST" name="captureResult" finished-at="2023-09-10T22:59:00 IST" duration-ms="177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyZipCodeFieldByEnteringInvalidNumber status=FAILURE method=CheckoutPageTest.verifyZipCodeFieldByEnteringInvalidNumber()[pri:10, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:00 IST" name="openbBrowser" finished-at="2023-09-10T22:59:03 IST" duration-ms="3018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyZipCodeFieldByEnteringCharacter()[pri:11, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:03 IST" name="verifyZipCodeFieldByEnteringCharacter" finished-at="2023-09-10T22:59:10 IST" duration-ms="6656" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.180)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [90af988209d94ddd271d95bab8c44864, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.180, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\AMOL\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56000}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56000/devtoo..., se:cdpVersion: 116.0.5845.180, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 90af988209d94ddd271d95bab8c44864]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.180)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [90af988209d94ddd271d95bab8c44864, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.180, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\AMOL\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56000}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56000/devtoo..., se:cdpVersion: 116.0.5845.180, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 90af988209d94ddd271d95bab8c44864
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy20.getText(Unknown Source)
at pom.CheckoutPage.displayingErrorMessage(CheckoutPage.java:37)
at test.CheckoutPageTest.verifyZipCodeFieldByEnteringCharacter(CheckoutPageTest.java:254)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyZipCodeFieldByEnteringCharacter -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:10 IST" name="captureResult" finished-at="2023-09-10T22:59:10 IST" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyZipCodeFieldByEnteringCharacter status=FAILURE method=CheckoutPageTest.verifyZipCodeFieldByEnteringCharacter()[pri:11, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:10 IST" name="openbBrowser" finished-at="2023-09-10T22:59:13 IST" duration-ms="2720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyZipCodeFieldByEnteringSpecialCharacter()[pri:11, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:13 IST" name="verifyZipCodeFieldByEnteringSpecialCharacter" finished-at="2023-09-10T22:59:20 IST" duration-ms="7084" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.180)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [cf23845d668a24942840f9789205ca97, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.180, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\AMOL\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56019}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56019/devtoo..., se:cdpVersion: 116.0.5845.180, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: cf23845d668a24942840f9789205ca97]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h3[@data-test='error']"}
  (Session info: chrome=116.0.5845.180)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [cf23845d668a24942840f9789205ca97, findElement {using=xpath, value=//h3[@data-test='error']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.180, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\AMOL\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56019}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56019/devtoo..., se:cdpVersion: 116.0.5845.180, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: cf23845d668a24942840f9789205ca97
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy20.getText(Unknown Source)
at pom.CheckoutPage.displayingErrorMessage(CheckoutPage.java:37)
at test.CheckoutPageTest.verifyZipCodeFieldByEnteringSpecialCharacter(CheckoutPageTest.java:275)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyZipCodeFieldByEnteringSpecialCharacter -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:20 IST" name="captureResult" finished-at="2023-09-10T22:59:20 IST" duration-ms="278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyZipCodeFieldByEnteringSpecialCharacter status=FAILURE method=CheckoutPageTest.verifyZipCodeFieldByEnteringSpecialCharacter()[pri:11, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:20 IST" name="openbBrowser" finished-at="2023-09-10T22:59:23 IST" duration-ms="3149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyContinueButtonWithoutInformation()[pri:13, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:23 IST" name="verifyContinueButtonWithoutInformation" finished-at="2023-09-10T22:59:25 IST" duration-ms="1227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContinueButtonWithoutInformation -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:25 IST" name="captureResult" finished-at="2023-09-10T22:59:25 IST" duration-ms="161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContinueButtonWithoutInformation status=SUCCESS method=CheckoutPageTest.verifyContinueButtonWithoutInformation()[pri:13, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:25 IST" name="openbBrowser" finished-at="2023-09-10T22:59:27 IST" duration-ms="2598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyContinueButtonWithInformation()[pri:14, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:27 IST" name="verifyContinueButtonWithInformation" finished-at="2023-09-10T22:59:29 IST" duration-ms="1724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContinueButtonWithInformation -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T22:59:29 IST" name="captureResult" finished-at="2023-09-10T22:59:29 IST" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContinueButtonWithInformation status=SUCCESS method=CheckoutPageTest.verifyContinueButtonWithInformation()[pri:14, instance:test.CheckoutPageTest@70325e14] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.CheckoutPageTest@70325e14]" started-at="2023-09-10T23:01:17 IST" name="publish" finished-at="2023-09-10T23:01:17 IST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.CheckoutPageTest -->
      <class name="test.ProductsPageTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:56:33 IST" name="configureReports" finished-at="2023-09-10T22:56:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:39 IST" name="openbBrowser" finished-at="2023-09-10T22:57:42 IST" duration-ms="2513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyDisplayOfProduct()[pri:1, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:42 IST" name="verifyDisplayOfProduct" finished-at="2023-09-10T22:57:43 IST" duration-ms="1100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDisplayOfProduct -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:43 IST" name="captureResult" finished-at="2023-09-10T22:57:43 IST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDisplayOfProduct status=SUCCESS method=ProductsPageTest.verifyDisplayOfProduct()[pri:1, instance:test.ProductsPageTest@23348b5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:43 IST" name="openbBrowser" finished-at="2023-09-10T22:57:46 IST" duration-ms="2915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyProductNameLink()[pri:2, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:46 IST" name="verifyProductNameLink" finished-at="2023-09-10T22:57:47 IST" duration-ms="834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductNameLink -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:47 IST" name="captureResult" finished-at="2023-09-10T22:57:47 IST" duration-ms="230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductNameLink status=SUCCESS method=ProductsPageTest.verifyProductNameLink()[pri:2, instance:test.ProductsPageTest@23348b5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:47 IST" name="openbBrowser" finished-at="2023-09-10T22:57:50 IST" duration-ms="2898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyProductImageLink()[pri:3, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:50 IST" name="verifyProductImageLink" finished-at="2023-09-10T22:57:51 IST" duration-ms="901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductImageLink -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:51 IST" name="captureResult" finished-at="2023-09-10T22:57:51 IST" duration-ms="188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductImageLink status=SUCCESS method=ProductsPageTest.verifyProductImageLink()[pri:3, instance:test.ProductsPageTest@23348b5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:51 IST" name="openbBrowser" finished-at="2023-09-10T22:57:54 IST" duration-ms="2890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyFilterByNameAtoZ()[pri:4, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:54 IST" name="verifyFilterByNameAtoZ" finished-at="2023-09-10T22:57:55 IST" duration-ms="1603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByNameAtoZ -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:55 IST" name="captureResult" finished-at="2023-09-10T22:57:55 IST" duration-ms="204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFilterByNameAtoZ status=SUCCESS method=ProductsPageTest.verifyFilterByNameAtoZ()[pri:4, instance:test.ProductsPageTest@23348b5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:55 IST" name="openbBrowser" finished-at="2023-09-10T22:57:58 IST" duration-ms="2246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyFilterByNameZtoA()[pri:5, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:57:58 IST" name="verifyFilterByNameZtoA" finished-at="2023-09-10T22:58:00 IST" duration-ms="1970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByNameZtoA -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:58:00 IST" name="captureResult" finished-at="2023-09-10T22:58:00 IST" duration-ms="120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFilterByNameZtoA status=SUCCESS method=ProductsPageTest.verifyFilterByNameZtoA()[pri:5, instance:test.ProductsPageTest@23348b5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:58:00 IST" name="openbBrowser" finished-at="2023-09-10T22:58:02 IST" duration-ms="2491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyFilterByPriceLowToHigh()[pri:6, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:58:02 IST" name="verifyFilterByPriceLowToHigh" finished-at="2023-09-10T22:58:04 IST" duration-ms="1933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByPriceLowToHigh -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:58:04 IST" name="captureResult" finished-at="2023-09-10T22:58:04 IST" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFilterByPriceLowToHigh status=SUCCESS method=ProductsPageTest.verifyFilterByPriceLowToHigh()[pri:6, instance:test.ProductsPageTest@23348b5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:58:04 IST" name="openbBrowser" finished-at="2023-09-10T22:58:07 IST" duration-ms="2504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyFilterByNamePriceHighToLow()[pri:7, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:58:07 IST" name="verifyFilterByNamePriceHighToLow" finished-at="2023-09-10T22:58:09 IST" duration-ms="1805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFilterByNamePriceHighToLow -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T22:58:09 IST" name="captureResult" finished-at="2023-09-10T22:58:09 IST" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFilterByNamePriceHighToLow status=SUCCESS method=ProductsPageTest.verifyFilterByNamePriceHighToLow()[pri:7, instance:test.ProductsPageTest@23348b5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.ProductsPageTest@23348b5d]" started-at="2023-09-10T23:01:17 IST" name="publish" finished-at="2023-09-10T23:01:17 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.ProductsPageTest -->
      <class name="test.FooterTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T22:56:33 IST" name="configureReports" finished-at="2023-09-10T22:56:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:00:38 IST" name="openbBrowser" finished-at="2023-09-10T23:00:41 IST" duration-ms="3600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyTwitterLink()[pri:1, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:00:41 IST" name="verifyTwitterLink" finished-at="2023-09-10T23:00:45 IST" duration-ms="3352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTwitterLink -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:00:45 IST" name="captureResult" finished-at="2023-09-10T23:00:45 IST" duration-ms="96" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTwitterLink status=SUCCESS method=FooterTest.verifyTwitterLink()[pri:1, instance:test.FooterTest@6200f9cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:00:45 IST" name="openbBrowser" finished-at="2023-09-10T23:00:48 IST" duration-ms="2785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyFacebookLink()[pri:2, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:00:48 IST" name="verifyFacebookLink" finished-at="2023-09-10T23:00:54 IST" duration-ms="6057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFacebookLink -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:00:54 IST" name="captureResult" finished-at="2023-09-10T23:00:55 IST" duration-ms="1357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFacebookLink status=SUCCESS method=FooterTest.verifyFacebookLink()[pri:2, instance:test.FooterTest@6200f9cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:00:55 IST" name="openbBrowser" finished-at="2023-09-10T23:00:58 IST" duration-ms="2696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyLinkdinLink()[pri:3, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:00:58 IST" name="verifyLinkdinLink" finished-at="2023-09-10T23:01:00 IST" duration-ms="2774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLinkdinLink -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:01:00 IST" name="captureResult" finished-at="2023-09-10T23:01:01 IST" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLinkdinLink status=SUCCESS method=FooterTest.verifyLinkdinLink()[pri:3, instance:test.FooterTest@6200f9cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:01:01 IST" name="openbBrowser" finished-at="2023-09-10T23:01:04 IST" duration-ms="3359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyPrivacyPolicy()[pri:4, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:01:04 IST" name="verifyPrivacyPolicy" finished-at="2023-09-10T23:01:05 IST" duration-ms="694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrivacyPolicy -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:01:05 IST" name="captureResult" finished-at="2023-09-10T23:01:05 IST" duration-ms="171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPrivacyPolicy status=SUCCESS method=FooterTest.verifyPrivacyPolicy()[pri:4, instance:test.FooterTest@6200f9cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.FooterTest@6200f9cb]" started-at="2023-09-10T23:01:17 IST" name="publish" finished-at="2023-09-10T23:01:17 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.FooterTest -->
      <class name="test.SwaglabsLoginTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:33 IST" name="configureReports" finished-at="2023-09-10T22:56:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:33 IST" name="openbBrowser" finished-at="2023-09-10T22:56:37 IST" duration-ms="3754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="loginStandardUserWithValidCredentials()[pri:1, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:37 IST" name="loginStandardUserWithValidCredentials" finished-at="2023-09-10T22:56:37 IST" duration-ms="390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginStandardUserWithValidCredentials -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:37 IST" name="captureResult" finished-at="2023-09-10T22:56:37 IST" duration-ms="197" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginStandardUserWithValidCredentials status=SUCCESS method=SwaglabsLoginTest.loginStandardUserWithValidCredentials()[pri:1, instance:test.SwaglabsLoginTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:37 IST" name="openbBrowser" finished-at="2023-09-10T22:56:40 IST" duration-ms="2183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="loginStandardUserWithValidUsernameAndInvalidPassword()[pri:2, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:40 IST" name="loginStandardUserWithValidUsernameAndInvalidPassword" finished-at="2023-09-10T22:56:40 IST" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginStandardUserWithValidUsernameAndInvalidPassword -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:40 IST" name="captureResult" finished-at="2023-09-10T22:56:40 IST" duration-ms="154" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginStandardUserWithValidUsernameAndInvalidPassword status=SUCCESS method=SwaglabsLoginTest.loginStandardUserWithValidUsernameAndInvalidPassword()[pri:2, instance:test.SwaglabsLoginTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:40 IST" name="openbBrowser" finished-at="2023-09-10T22:56:43 IST" duration-ms="2796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="loginStandardUserWithInvalidUsernameAndValidPassword()[pri:3, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:43 IST" name="loginStandardUserWithInvalidUsernameAndValidPassword" finished-at="2023-09-10T22:56:43 IST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginStandardUserWithInvalidUsernameAndValidPassword -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:43 IST" name="captureResult" finished-at="2023-09-10T22:56:43 IST" duration-ms="172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginStandardUserWithInvalidUsernameAndValidPassword status=SUCCESS method=SwaglabsLoginTest.loginStandardUserWithInvalidUsernameAndValidPassword()[pri:3, instance:test.SwaglabsLoginTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:43 IST" name="openbBrowser" finished-at="2023-09-10T22:56:45 IST" duration-ms="2286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="loginOfLockedOutUserWithValidCredentials()[pri:4, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:45 IST" name="loginOfLockedOutUserWithValidCredentials" finished-at="2023-09-10T22:56:46 IST" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginOfLockedOutUserWithValidCredentials -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:46 IST" name="captureResult" finished-at="2023-09-10T22:56:46 IST" duration-ms="177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginOfLockedOutUserWithValidCredentials status=SUCCESS method=SwaglabsLoginTest.loginOfLockedOutUserWithValidCredentials()[pri:4, instance:test.SwaglabsLoginTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:46 IST" name="openbBrowser" finished-at="2023-09-10T22:56:48 IST" duration-ms="2429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="loginLockedOutUserWithValidUsernameAndInvalidPassword()[pri:5, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:48 IST" name="loginLockedOutUserWithValidUsernameAndInvalidPassword" finished-at="2023-09-10T22:56:49 IST" duration-ms="261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginLockedOutUserWithValidUsernameAndInvalidPassword -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:49 IST" name="captureResult" finished-at="2023-09-10T22:56:49 IST" duration-ms="141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginLockedOutUserWithValidUsernameAndInvalidPassword status=SUCCESS method=SwaglabsLoginTest.loginLockedOutUserWithValidUsernameAndInvalidPassword()[pri:5, instance:test.SwaglabsLoginTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:49 IST" name="openbBrowser" finished-at="2023-09-10T22:56:51 IST" duration-ms="2452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="loginOfProblemUserWithValidCredentials()[pri:6, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:51 IST" name="loginOfProblemUserWithValidCredentials" finished-at="2023-09-10T22:56:51 IST" duration-ms="270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginOfProblemUserWithValidCredentials -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:51 IST" name="captureResult" finished-at="2023-09-10T22:56:52 IST" duration-ms="511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginOfProblemUserWithValidCredentials status=SUCCESS method=SwaglabsLoginTest.loginOfProblemUserWithValidCredentials()[pri:6, instance:test.SwaglabsLoginTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:52 IST" name="openbBrowser" finished-at="2023-09-10T22:56:54 IST" duration-ms="2272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="loginOfProblemUserWithValidUsernameAndInvalidPassword()[pri:7, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:54 IST" name="loginOfProblemUserWithValidUsernameAndInvalidPassword" finished-at="2023-09-10T22:56:55 IST" duration-ms="238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginOfProblemUserWithValidUsernameAndInvalidPassword -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:55 IST" name="captureResult" finished-at="2023-09-10T22:56:55 IST" duration-ms="196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginOfProblemUserWithValidUsernameAndInvalidPassword status=SUCCESS method=SwaglabsLoginTest.loginOfProblemUserWithValidUsernameAndInvalidPassword()[pri:7, instance:test.SwaglabsLoginTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:55 IST" name="openbBrowser" finished-at="2023-09-10T22:56:57 IST" duration-ms="2323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="loginOfProblemUserWithInvalidUsernameAndValidPassword()[pri:8, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:57 IST" name="loginOfProblemUserWithInvalidUsernameAndValidPassword" finished-at="2023-09-10T22:56:57 IST" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginOfProblemUserWithInvalidUsernameAndValidPassword -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:57 IST" name="captureResult" finished-at="2023-09-10T22:56:57 IST" duration-ms="221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginOfProblemUserWithInvalidUsernameAndValidPassword status=SUCCESS method=SwaglabsLoginTest.loginOfProblemUserWithInvalidUsernameAndValidPassword()[pri:8, instance:test.SwaglabsLoginTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:56:57 IST" name="openbBrowser" finished-at="2023-09-10T22:57:00 IST" duration-ms="2243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="loginOfPerformanceGlitchUserWithValidCredentials()[pri:9, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:57:00 IST" name="loginOfPerformanceGlitchUserWithValidCredentials" finished-at="2023-09-10T22:57:05 IST" duration-ms="5310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginOfPerformanceGlitchUserWithValidCredentials -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:57:05 IST" name="captureResult" finished-at="2023-09-10T22:57:05 IST" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginOfPerformanceGlitchUserWithValidCredentials status=SUCCESS method=SwaglabsLoginTest.loginOfPerformanceGlitchUserWithValidCredentials()[pri:9, instance:test.SwaglabsLoginTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:57:05 IST" name="openbBrowser" finished-at="2023-09-10T22:57:07 IST" duration-ms="2180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="loginOfPerformanceGlitchUserWithValidUsernameAndInvalidPassword()[pri:10, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:57:07 IST" name="loginOfPerformanceGlitchUserWithValidUsernameAndInvalidPassword" finished-at="2023-09-10T22:57:08 IST" duration-ms="266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginOfPerformanceGlitchUserWithValidUsernameAndInvalidPassword -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:57:08 IST" name="captureResult" finished-at="2023-09-10T22:57:08 IST" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginOfPerformanceGlitchUserWithValidUsernameAndInvalidPassword status=SUCCESS method=SwaglabsLoginTest.loginOfPerformanceGlitchUserWithValidUsernameAndInvalidPassword()[pri:10, instance:test.SwaglabsLoginTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:57:08 IST" name="openbBrowser" finished-at="2023-09-10T22:57:10 IST" duration-ms="2501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="loginOfPerformanceGlitchUserWithInvalidUsernameAndValidPassword()[pri:11, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:57:10 IST" name="loginOfPerformanceGlitchUserWithInvalidUsernameAndValidPassword" finished-at="2023-09-10T22:57:11 IST" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginOfPerformanceGlitchUserWithInvalidUsernameAndValidPassword -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T22:57:11 IST" name="captureResult" finished-at="2023-09-10T22:57:11 IST" duration-ms="304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginOfPerformanceGlitchUserWithInvalidUsernameAndValidPassword status=SUCCESS method=SwaglabsLoginTest.loginOfPerformanceGlitchUserWithInvalidUsernameAndValidPassword()[pri:11, instance:test.SwaglabsLoginTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.SwaglabsLoginTest@24313fcc]" started-at="2023-09-10T23:01:17 IST" name="publish" finished-at="2023-09-10T23:01:17 IST" duration-ms="99" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.SwaglabsLoginTest -->
      <class name="test.EndToEndTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.EndToEndTest@69453e37]" started-at="2023-09-10T22:56:33 IST" name="configureReports" finished-at="2023-09-10T22:56:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.EndToEndTest@69453e37]" started-at="2023-09-10T23:01:10 IST" name="openbBrowser" finished-at="2023-09-10T23:01:13 IST" duration-ms="3629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyOrderPlace()[pri:1, instance:test.EndToEndTest@69453e37]" started-at="2023-09-10T23:01:13 IST" name="verifyOrderPlace" finished-at="2023-09-10T23:01:16 IST" duration-ms="2217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOrderPlace -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.EndToEndTest@69453e37]" started-at="2023-09-10T23:01:16 IST" name="captureResult" finished-at="2023-09-10T23:01:16 IST" duration-ms="245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyOrderPlace status=SUCCESS method=EndToEndTest.verifyOrderPlace()[pri:1, instance:test.EndToEndTest@69453e37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.EndToEndTest@69453e37]" started-at="2023-09-10T23:01:17 IST" name="publish" finished-at="2023-09-10T23:01:17 IST" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.EndToEndTest -->
      <class name="test.AboutTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.AboutTest@20d525]" started-at="2023-09-10T22:56:33 IST" name="configureReports" finished-at="2023-09-10T22:56:33 IST" duration-ms="420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.AboutTest@20d525]" started-at="2023-09-10T23:00:27 IST" name="openbBrowser" finished-at="2023-09-10T23:00:30 IST" duration-ms="2597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyAboutPage()[pri:1, instance:test.AboutTest@20d525]" started-at="2023-09-10T23:00:30 IST" name="verifyAboutPage" finished-at="2023-09-10T23:00:38 IST" duration-ms="7966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAboutPage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AboutTest@20d525]" started-at="2023-09-10T23:00:38 IST" name="captureResult" finished-at="2023-09-10T23:00:38 IST" duration-ms="189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAboutPage status=SUCCESS method=AboutTest.verifyAboutPage()[pri:1, instance:test.AboutTest@20d525] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.AboutTest@20d525]" started-at="2023-09-10T23:01:16 IST" name="publish" finished-at="2023-09-10T23:01:16 IST" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.AboutTest -->
      <class name="test.AddToCartTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T22:56:33 IST" name="configureReports" finished-at="2023-09-10T22:56:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T22:59:59 IST" name="openbBrowser" finished-at="2023-09-10T23:00:02 IST" duration-ms="2527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyAddToCartFromProductPage()[pri:1, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:02 IST" name="verifyAddToCartFromProductPage" finished-at="2023-09-10T23:00:02 IST" duration-ms="766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddToCartFromProductPage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:02 IST" name="captureResult" finished-at="2023-09-10T23:00:03 IST" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddToCartFromProductPage status=SUCCESS method=AddToCartTest.verifyAddToCartFromProductPage()[pri:1, instance:test.AddToCartTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:03 IST" name="openbBrowser" finished-at="2023-09-10T23:00:06 IST" duration-ms="3053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyAddToCartFromProductPageWithProductCount()[pri:2, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:06 IST" name="verifyAddToCartFromProductPageWithProductCount" finished-at="2023-09-10T23:00:07 IST" duration-ms="1009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddToCartFromProductPageWithProductCount -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:07 IST" name="captureResult" finished-at="2023-09-10T23:00:07 IST" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddToCartFromProductPageWithProductCount status=SUCCESS method=AddToCartTest.verifyAddToCartFromProductPageWithProductCount()[pri:2, instance:test.AddToCartTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:07 IST" name="openbBrowser" finished-at="2023-09-10T23:00:10 IST" duration-ms="3050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyRemoveProductFromProductPage()[pri:3, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:10 IST" name="verifyRemoveProductFromProductPage" finished-at="2023-09-10T23:00:11 IST" duration-ms="1200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRemoveProductFromProductPage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:11 IST" name="captureResult" finished-at="2023-09-10T23:00:11 IST" duration-ms="170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRemoveProductFromProductPage status=SUCCESS method=AddToCartTest.verifyRemoveProductFromProductPage()[pri:3, instance:test.AddToCartTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:11 IST" name="openbBrowser" finished-at="2023-09-10T23:00:14 IST" duration-ms="3016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="addMultipleProductToCart()[pri:4, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:14 IST" name="addMultipleProductToCart" finished-at="2023-09-10T23:00:15 IST" duration-ms="1072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMultipleProductToCart -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:15 IST" name="captureResult" finished-at="2023-09-10T23:00:15 IST" duration-ms="162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMultipleProductToCart status=SUCCESS method=AddToCartTest.addMultipleProductToCart()[pri:4, instance:test.AddToCartTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:15 IST" name="openbBrowser" finished-at="2023-09-10T23:00:18 IST" duration-ms="2840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyAddToCartFromProductDetailsPage()[pri:5, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:18 IST" name="verifyAddToCartFromProductDetailsPage" finished-at="2023-09-10T23:00:19 IST" duration-ms="978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddToCartFromProductDetailsPage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:19 IST" name="captureResult" finished-at="2023-09-10T23:00:19 IST" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddToCartFromProductDetailsPage status=SUCCESS method=AddToCartTest.verifyAddToCartFromProductDetailsPage()[pri:5, instance:test.AddToCartTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:19 IST" name="openbBrowser" finished-at="2023-09-10T23:00:22 IST" duration-ms="2736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyAddToCartFromProductDetailsPageWithProductCount()[pri:6, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:22 IST" name="verifyAddToCartFromProductDetailsPageWithProductCount" finished-at="2023-09-10T23:00:23 IST" duration-ms="980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddToCartFromProductDetailsPageWithProductCount -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:23 IST" name="captureResult" finished-at="2023-09-10T23:00:23 IST" duration-ms="225" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddToCartFromProductDetailsPageWithProductCount status=SUCCESS method=AddToCartTest.verifyAddToCartFromProductDetailsPageWithProductCount()[pri:6, instance:test.AddToCartTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:23 IST" name="openbBrowser" finished-at="2023-09-10T23:00:26 IST" duration-ms="2596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyRemoveProductFromProductDetailsPage()[pri:7, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:26 IST" name="verifyRemoveProductFromProductDetailsPage" finished-at="2023-09-10T23:00:27 IST" duration-ms="867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRemoveProductFromProductDetailsPage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:00:27 IST" name="captureResult" finished-at="2023-09-10T23:00:27 IST" duration-ms="163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRemoveProductFromProductDetailsPage status=SUCCESS method=AddToCartTest.verifyRemoveProductFromProductDetailsPage()[pri:7, instance:test.AddToCartTest@7c9d8e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.AddToCartTest@7c9d8e2]" started-at="2023-09-10T23:01:16 IST" name="publish" finished-at="2023-09-10T23:01:16 IST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.AddToCartTest -->
      <class name="test.CartPageTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:56:33 IST" name="configureReports" finished-at="2023-09-10T22:56:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:11 IST" name="openbBrowser" finished-at="2023-09-10T22:57:13 IST" duration-ms="2322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyAddToCartItemLink()[pri:1, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:13 IST" name="verifyAddToCartItemLink" finished-at="2023-09-10T22:57:14 IST" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddToCartItemLink -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:14 IST" name="captureResult" finished-at="2023-09-10T22:57:14 IST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddToCartItemLink status=SUCCESS method=CartPageTest.verifyAddToCartItemLink()[pri:1, instance:test.CartPageTest@2df3b89c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:14 IST" name="openbBrowser" finished-at="2023-09-10T22:57:17 IST" duration-ms="2622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyDisplayOfAddToCartProduct()[pri:2, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:17 IST" name="verifyDisplayOfAddToCartProduct" finished-at="2023-09-10T22:57:17 IST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDisplayOfAddToCartProduct -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:17 IST" name="captureResult" finished-at="2023-09-10T22:57:17 IST" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDisplayOfAddToCartProduct status=SUCCESS method=CartPageTest.verifyDisplayOfAddToCartProduct()[pri:2, instance:test.CartPageTest@2df3b89c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:17 IST" name="openbBrowser" finished-at="2023-09-10T22:57:20 IST" duration-ms="2725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyAddToCartProductName()[pri:3, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:20 IST" name="verifyAddToCartProductName" finished-at="2023-09-10T22:57:20 IST" duration-ms="390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddToCartProductName -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:20 IST" name="captureResult" finished-at="2023-09-10T22:57:21 IST" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddToCartProductName status=SUCCESS method=CartPageTest.verifyAddToCartProductName()[pri:3, instance:test.CartPageTest@2df3b89c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:21 IST" name="openbBrowser" finished-at="2023-09-10T22:57:23 IST" duration-ms="2172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyAddToCartProductNameLink()[pri:4, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:23 IST" name="verifyAddToCartProductNameLink" finished-at="2023-09-10T22:57:23 IST" duration-ms="405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddToCartProductNameLink -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:23 IST" name="captureResult" finished-at="2023-09-10T22:57:23 IST" duration-ms="167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddToCartProductNameLink status=SUCCESS method=CartPageTest.verifyAddToCartProductNameLink()[pri:4, instance:test.CartPageTest@2df3b89c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:23 IST" name="openbBrowser" finished-at="2023-09-10T22:57:26 IST" duration-ms="2544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyRemoveTheProductFromCart()[pri:5, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:26 IST" name="verifyRemoveTheProductFromCart" finished-at="2023-09-10T22:57:31 IST" duration-ms="5438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRemoveTheProductFromCart -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:31 IST" name="captureResult" finished-at="2023-09-10T22:57:31 IST" duration-ms="120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRemoveTheProductFromCart status=SUCCESS method=CartPageTest.verifyRemoveTheProductFromCart()[pri:5, instance:test.CartPageTest@2df3b89c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:31 IST" name="openbBrowser" finished-at="2023-09-10T22:57:34 IST" duration-ms="2301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyCancelButton()[pri:6, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:34 IST" name="verifyCancelButton" finished-at="2023-09-10T22:57:34 IST" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCancelButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:34 IST" name="captureResult" finished-at="2023-09-10T22:57:34 IST" duration-ms="196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCancelButton status=SUCCESS method=CartPageTest.verifyCancelButton()[pri:6, instance:test.CartPageTest@2df3b89c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:34 IST" name="openbBrowser" finished-at="2023-09-10T22:57:38 IST" duration-ms="3149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyCheckoutButton()[pri:7, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:38 IST" name="verifyCheckoutButton" finished-at="2023-09-10T22:57:39 IST" duration-ms="1325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckoutButton -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T22:57:39 IST" name="captureResult" finished-at="2023-09-10T22:57:39 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCheckoutButton status=SUCCESS method=CartPageTest.verifyCheckoutButton()[pri:7, instance:test.CartPageTest@2df3b89c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.CartPageTest@2df3b89c]" started-at="2023-09-10T23:01:16 IST" name="publish" finished-at="2023-09-10T23:01:17 IST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.CartPageTest -->
      <class name="test.LogoutTest">
        <test-method is-config="true" signature="configureReports()[pri:0, instance:test.LogoutTest@2002fc1d]" started-at="2023-09-10T22:56:33 IST" name="configureReports" finished-at="2023-09-10T22:56:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configureReports -->
        <test-method is-config="true" signature="openbBrowser()[pri:0, instance:test.LogoutTest@2002fc1d]" started-at="2023-09-10T23:01:05 IST" name="openbBrowser" finished-at="2023-09-10T23:01:08 IST" duration-ms="2982" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openbBrowser -->
        <test-method signature="verifyLogoutPage()[pri:1, instance:test.LogoutTest@2002fc1d]" started-at="2023-09-10T23:01:08 IST" name="verifyLogoutPage" finished-at="2023-09-10T23:01:10 IST" duration-ms="1702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutPage -->
        <test-method is-config="true" signature="captureResult(org.testng.ITestResult)[pri:0, instance:test.LogoutTest@2002fc1d]" started-at="2023-09-10T23:01:10 IST" name="captureResult" finished-at="2023-09-10T23:01:10 IST" duration-ms="161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutPage status=SUCCESS method=LogoutTest.verifyLogoutPage()[pri:1, instance:test.LogoutTest@2002fc1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureResult -->
        <test-method is-config="true" signature="publish()[pri:0, instance:test.LogoutTest@2002fc1d]" started-at="2023-09-10T23:01:17 IST" name="publish" finished-at="2023-09-10T23:01:17 IST" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publish -->
      </class> <!-- test.LogoutTest -->
    </test> <!-- Regression -->
  </suite> <!-- Swag Labs Automation -->
</testng-results>
